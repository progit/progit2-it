[[r_first_time]]
=== Impostare Git per la prima volta

Ora che Git è istallato sul tuo sistema, dovrai fare alcune cose per impostare Git.
Dovrai fare queste cose solamente una volta su ogni computer; rimarranno anche tra gli aggiornamenti.
Potrai anche cambiarle quando vorrai eseguendo nuovamente i comandi.

Git dispone di uno strumento chiamato `git config` che ti permetterà di impostare le variabili di configurazione che controllano tutti gli aspetti di come Git funziona e come viene visualizzato.(((git commands, config)))
Queste variabili possono essere salvate in tre differenti posti:

1. Nel file `/etc/gitconfig`: Contiene i valori per ogni utente sul sistema e i suoi repository.
  Passando l'opzione `--system` a `git config`, leggerà e scriverà specificamente su questo file.
2. Nel file `~/.gitconfig` o `~/.config/git/config`: Specifico per l'utente.
  Puoi fare in modo che Git legga e scriva su questo specificamente su questo file passando l'opzione `--global`.
3. Nel file `config` nella cartella di Git (che corrisponde a `.git/config`) di qualunque repository tu stia attualmente utilizzando: Specifico per quel singolo repository.

Ogni livello prevale su quello precedente, quindi i valori in `.git/config` prevalgono su quelli in `/etc/gitconfig`.

Sui sistemi Windows, Git cerca il file `.gitconfig` nella cartella `$HOME` (`C:\Users\$USER` per la maggior parte delle persone).
Git cerca anche in `/etc/gitconfig`, anche se è relativo alla root di MSys, che è dove decidi di installare Git sui sistemi Windows quando fai partire l'installazione.

==== La tua identità

La prima cosa che dovresti fare quando installi Git è impostare il tuo nome e indirizzo e-mail.
Questo è importante poiché ogni commit in Git usa queste informazioni, e sarà immutabilmente impresso nei commit che creerai:

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
----

Dovrai fare questa operazione solamente una volta se usi l'opzione `--global`, perché allora Git userà sempre quell'informazione per tutte le operazione che farai su quel sistema.
Se vuoi utilizzare un nome o un indirizzo e-mail diverso per uno specifico progetto, puoi utilizzare il comando senza l'opzione `--global` quando sei in quel progetto.

Molte delle interfacce grafiche ti aiuteranno a farlo al primo avvio.

==== Il tuo editor

Ora che la tua identità è stata impostata, puoi configurare il tuo editor di testo predefinito che Git userà quando ti chiederà di scrivere un commento.
Se non configurato, Git userà l'editor predefinito del sistema, generalmente Vim.
Se vuoi utilizzare un editor diverso, come Emacs, puoi fare nel seguente modo:

[source,console]
----
$ git config --global core.editor emacs
----

[WARNING]
====
Vim ed Emacs sono degli editor di testo popolari utilizzati dagli sviluppatori su sistemi basati su Unix come Linux e Mac. Se non sei familiare con nessuno dei due o se sei su un sistema Windows, dovrai cercare le istruzioni per impostare il tuo editor preferito con Git.
Se non imposti un editor così, e non sai cosa sono Vim o Emacs, finirai in una grande confusione quando verranno lanciati.
====

==== Controlla le impostazioni

Se vuoi controllare le tue impostazioni, puoi usare il comando `git config --list` per mostrare tutte le impostazioni che Git trova in quel punto:

[source,console]
----
$ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
----

Vedrai alcune chiavi più di una volta, perché Git legge le stesse chiavi da diversi file (`/etc/gitconfig` e `~/.gitconfig`, per esempio).
In questo caso, Git utilizza l'ultimo valore per ogni chiave univoca che vede.

Puoi anche controllare quale valore pensa Git per una specifica chiave scrivendo `git config <key>`:(((git commands, config)))

[source,console]
----
$ git config user.name
John Doe
----
